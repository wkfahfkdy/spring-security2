<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/favicon.ico" access="hasRole('ROLE_ANONYMOUS')"/>
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<security:intercept-url pattern="/login/**" access="permitAll"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login login-page="/loginPage.do"
							login-processing-url="/login.do"
							authentication-failure-url="/loginPage.do?err=true"
							
							default-target-url="/"
							username-parameter="id"
							password-parameter="password"
		/>
							
		<security:session-management>
			<security:concurrency-control max-sessions="1" expired-url="/"/>
		</security:session-management>
		
		<security:access-denied-handler error-page="/accessDenied.do"/>
		
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider>
				<security:jdbc-user-service data-source-ref="dataSource"
							users-by-username-query="select id as username,
													password,
													1 as enable
													from member where id = ?"
							authorities-by-username-query="select id as username,
													case when membergrade='01' then 'ROLE_ADMIN'
													else 'ROLE_USER'
													end authority
													from member where id = ?"
				/>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
